@model A4AeroAssisgment.Models.BusinessEntities

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>BusinessEntities</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Code)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Code)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Street)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Street)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Zip)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Zip)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Country)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Country)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Mobile)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Mobile)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Phone)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Phone)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ContactPerson)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ContactPerson)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReferredBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReferredBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Logo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Logo)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>

        <dd>
            @if (Model.Status == 0)
            {
                <text>New</text>
            }
            else if (Model.Status == 1)
            {
                <text>Active</text>
            }
            else if (Model.Status == 2)
            {
                <text>Inactive</text>
            }
            else
            {
                <text>Blocked</text>
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Balance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Balance)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LoginUrl)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LoginUrl)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SecurityCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SecurityCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SMTPServer)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SMTPServer)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SMTPPort)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SMTPPort)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SMTPUsername)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SMTPUsername)
        </dd>

        <dt>
            Created On
        </dt>

        <dd>
            @if (Model.CreatedOnUtc.HasValue)
            {
                <text>@Model.CreatedOnUtc.Value.ToString("dd-MMM-yyyy, hh:mm tt")</text>
            }          
        </dd>

        <dt>
            Updated On
        </dt>

        <dd>
            @if (Model.UpdatedOnUtc.HasValue)
            {
               <text>@Model.UpdatedOnUtc.Value.ToString("dd-MMM-yyyy, hh:mm tt")</text>
            }     
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CurrentBalance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CurrentBalance)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.BusinessId }, new { @class = "editDialog" }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<div class="modal fade" id="Add-Model" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="max-width:800px">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true" style="color:#0a0909; font-size:x-large">&times;</span></button>
            </div>
            <div class="divForAdd">

            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-dismiss="modal" aria-hidden="true">Close</button>
            </div>
        </div>
    </div>
</div>
@section scripts{

    <script>
        $('.editDialog').click(function (event) {
            event.preventDefault();
            var title = this.text;
            $('.modal-title').text(title);
            $.get(this.href, function (response) {
                $('.divForAdd').html(response);
            });
            //jQuery.noConflict();
            $('#Add-Model').modal({
                backdrop: 'static',
            }, 'show');
        });
    </script>
}